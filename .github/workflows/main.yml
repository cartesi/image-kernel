name: Build
on: [push]
<<<<<<< HEAD
=======
env:
  KERNEL_VERSION: 5.15.63-ctsi-2
  RISCV_PK_VERSION: 1.0.0-ctsi-1
  TOOLCHAIN_REPOSITORY: cartesi/toolchain
  TOOLCHAIN_VERSION: 0.15.0
>>>>>>> cc77330 (feat!: Update toolchain version to v0.15.0)
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
<<<<<<< HEAD

      - name: Retrieve environment variables
        run: make env >> $GITHUB_ENV

      - name: Copy default Cartesi Linux config
        run: make cartesi-linux-config

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
=======
>>>>>>> cc77330 (feat!: Update toolchain version to v0.15.0)

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository_owner }}/linux-kernel
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

<<<<<<< HEAD
      - name: Login to GHCR
=======
      - name: Login to Docker Hub
>>>>>>> cc77330 (feat!: Update toolchain version to v0.15.0)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

<<<<<<< HEAD
      - name: Download dependencies
        run: make download
=======
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download linux and riscv-pk
        run: make checksum

      - name: Copy default Cartesi Linux config
        run: make cartesi-linux-config
>>>>>>> cc77330 (feat!: Update toolchain version to v0.15.0)

      - name: Build docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: false
          load: true
          build-args: |
            TOOLCHAIN_REPOSITORY=${{ env.TOOLCHAIN_REPOSITORY }}
            TOOLCHAIN_VERSION=${{ env.TOOLCHAIN_VERSION }}
            KERNEL_VERSION=${{ env.KERNEL_VERSION }}
            IMAGE_KERNEL_VERSION=${{ env.IMAGE_KERNEL_VERSION }}
            RISCV_PK_VERSION=${{ env.RISCV_PK_VERSION }}
          cache-from: type=gha,scope=regular
          cache-to: type=gha,mode=max,scope=regular

      - name: Export artifacts
        run: make copy IMG=`echo "${{ steps.docker_meta.outputs.tags }}" | head -1 | cut -d "," -f 1 | xargs`

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: artifacts/*

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          prerelease: true
          files: |
            artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}

      - name: Push docker image
        id: docker_push
        uses: docker/build-push-action@v4
        if: ${{ startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/develop') }}
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: true
          load: false
          build-args: |
            TOOLCHAIN_REPOSITORY=${{ env.TOOLCHAIN_REPOSITORY }}
            TOOLCHAIN_VERSION=${{ env.TOOLCHAIN_VERSION }}
            KERNEL_VERSION=${{ env.KERNEL_VERSION }}
            IMAGE_KERNEL_VERSION=${{ env.IMAGE_KERNEL_VERSION }}
            RISCV_PK_VERSION=${{ env.RISCV_PK_VERSION }}
          cache-from: type=gha,scope=regular
          cache-to: type=gha,mode=max,scope=regular
