diff -Nru linux-5.5.4.orig/drivers/mtd/maps/physmap-core.c linux-5.5.4.new/drivers/mtd/maps/physmap-core.c
--- linux-5.5.4.orig/drivers/mtd/maps/physmap-core.c	2020-02-14 21:53:07.000000000 +0000
+++ linux-5.5.4.new/drivers/mtd/maps/physmap-core.c	2020-03-10 21:42:57.615356000 +0000
@@ -444,6 +444,7 @@
 static int physmap_flash_probe(struct platform_device *dev)
 {
 	struct physmap_flash_info *info;
+	struct resource *res;
 	int err = 0;
 	int i;
 
@@ -493,8 +494,6 @@
 		return err;
 
 	for (i = 0; i < info->nmaps; i++) {
-		struct resource *res;
-
 		res = platform_get_resource(dev, IORESOURCE_MEM, i);
 		info->maps[i].virt = devm_ioremap_resource(&dev->dev, res);
 		if (IS_ERR(info->maps[i].virt)) {
@@ -505,22 +504,23 @@
 		dev_notice(&dev->dev, "physmap platform flash device: %pR\n",
 			   res);
 
-		info->maps[i].name = dev_name(&dev->dev);
+		if (!info->maps[i].name)
+			info->maps[i].name = dev_name(&dev->dev);
 
 		if (!info->maps[i].phys)
 			info->maps[i].phys = res->start;
 
-		info->win_order = get_bitmask_order(resource_size(res)) - 1;
-		info->maps[i].size = BIT(info->win_order +
-					 (info->gpios ?
-					  info->gpios->ndescs : 0));
-
 		info->maps[i].map_priv_1 = (unsigned long)dev;
 
 		if (info->gpios) {
+			info->win_order = get_bitmask_order(resource_size(res)) - 1;
+			info->maps[i].size = BIT(info->win_order + info->gpios->ndescs);
+
 			err = physmap_addr_gpios_map_init(&info->maps[i]);
 			if (err)
 				goto err_out;
+		} else {
+			info->maps[i].size = resource_size(res);
 		}
 
 #ifdef CONFIG_MTD_COMPLEX_MAPPINGS
